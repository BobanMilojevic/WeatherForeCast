<Window x:Class="Wifi.WeatherForeCast.Ui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Wifi.WeatherForeCast.Ui.ViewModel"
        xmlns:model="clr-namespace:Wifi.WeatherForeCast.Model;assembly=Wifi.WeatherForeCast.Model"
        xmlns:behav="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:cc="clr-namespace:Wifi.WeatherForeCast.Ui"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="800"
        Width="450"
        WindowStartupLocation="CenterScreen">
    
    <behav:Interaction.Triggers>
        <behav:EventTrigger EventName="Closing">
            <behav:InvokeCommandAction Command="{Binding SaveDataCommand}"/>
        </behav:EventTrigger>
    </behav:Interaction.Triggers>
    
    <Window.Resources>
        <model:TemperatureConverter x:Key="TempConverter"/>
    </Window.Resources>
    
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0"
                   LastChildFill="True">
            
            <cc:CustomComboBox DockPanel.Dock="Top" 
                     Margin="5"
                     FontSize="20"
                     Text="{Binding SearchItem, UpdateSourceTrigger=PropertyChanged}"
                     SelectedItem="{Binding SelectedSearchItem, UpdateSourceTrigger=PropertyChanged}"
                     ItemsSource="{Binding CityItemsList, UpdateSourceTrigger=PropertyChanged}"
                     IsTextSearchEnabled="False"
                     IsEditable="True"
                     IsSynchronizedWithCurrentItem="True"
                     StaysOpenOnEdit="True"
                     IsDropDownOpen="{Binding SearchValueDropDown}"
                     >
            </cc:CustomComboBox>
        </DockPanel>

        <Grid Grid.Row="1"
              Margin="5">

            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15*"/>
                <ColumnDefinition Width="70*"/>
                <ColumnDefinition Width="15*"/>
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Row="0"
                       Grid.Column="1">

                <Label DockPanel.Dock="Top"
                       Content="{Binding SelectedCoordinateItem.City, UpdateSourceTrigger=PropertyChanged}"
                       HorizontalAlignment="Center"/>
                <Label DockPanel.Dock="Top" 
                       Content="{Binding DayPeriod, UpdateSourceTrigger=PropertyChanged}" 
                       HorizontalAlignment="Center"/>
                <Image DockPanel.Dock="Top" 
                       Source="{Binding IconSource, UpdateSourceTrigger=PropertyChanged}" 
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center" 
                       Width="200" Height="200"/>
                
                <DockPanel DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label Content="Temperature:"/>
                    <Label ContentStringFormat="{Binding TemperatureFormatString}">
                        <Label.Content>
                            <MultiBinding Converter="{StaticResource TempConverter}">
                                <Binding Path="SelectedWeatherItem.Temperature"/>
                                <Binding Path="DataContext.IsDegree" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}"/>
                            </MultiBinding>
                        </Label.Content>
                    </Label>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label Content="Gefüllte Temp:"/>
                    <Label ContentStringFormat="{Binding TemperatureFormatString}">
                        <Label.Content>
                            <MultiBinding Converter="{StaticResource TempConverter}">
                                <Binding Path="SelectedWeatherItem.PerceivedTemperature"/>
                                <Binding Path="DataContext.IsDegree" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}"/>
                            </MultiBinding>
                        </Label.Content>
                    </Label>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label Content="Luftdruck:"/>
                    <Label Content="{Binding SelectedWeatherItem.Pressure, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="mBar"/>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label Content="Luftfeuchtigkeit:"/>
                    <Label Content="{Binding SelectedWeatherItem.Humidity, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="%"/>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label Content="Windgeschwindigkeit:"/>
                    <Label Content="{Binding SelectedWeatherItem.WindSpeed, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="m/s"/>
                </DockPanel>
            </DockPanel>

            <Button Grid.Column="0" 
                    Background="Transparent"
                    BorderThickness="0"
                    Command="{Binding PreviousWeatherItemCommand}">
                <Image Source="pack://siteoforigin:,,,/Resources/controlicon/previous_item.png"/>
            </Button>
            <Button Grid.Column="2"
                    Background="Transparent"
                    BorderThickness="0"
                    Command="{Binding NextWeatherItemCommand}">
                <Image Source="pack://siteoforigin:,,,/Resources/controlicon/next_item.png"/>
            </Button>
        </Grid>

        <DockPanel Grid.Row="2"
                   Margin="5"
                   >

            <StackPanel DockPanel.Dock="Top"
                        Orientation="Horizontal" 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center"
                        Margin="5">

                <Label Content="Wettervorhersage in Tagen"/>
                
                <ComboBox Width="50"
                          Margin="5, 0, 5, 0"
                          ItemsSource="{Binding NumberOfDays, UpdateSourceTrigger=PropertyChanged}"
                          SelectedIndex="{Binding SelectedNumberOfDays, UpdateSourceTrigger=PropertyChanged}"/>

                <RadioButton Content="°C"
                             Margin="5, 0, 5, 0"
                             IsChecked="{Binding IsDegree, UpdateSourceTrigger=PropertyChanged}"
                             Width="30"/>

                <RadioButton Content="°F"
                             Margin="5, 0, 5, 0"
                             Width="30"/>

            </StackPanel>
            
            <ListView DockPanel.Dock="Top"
                      VerticalAlignment="Stretch"
                      ItemsSource="{Binding Path=WeatherNDayItemsList, UpdateSourceTrigger=PropertyChanged}"
                      ItemTemplate="{StaticResource ResourceKey=templCollectionItemListItem}"
                      AlternationCount="2"
                      ItemContainerStyle="{StaticResource ListBoxItemAlternatingStyle}"/>
            <!-- ItemsSource="{Binding WeatherNDayItemsList, UpdateSourceTrigger=PropertyChanged}" -->
        </DockPanel>
        



    </Grid>
</Window>
